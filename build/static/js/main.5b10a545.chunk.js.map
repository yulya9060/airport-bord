{"version":3,"sources":["Dispatcher.js","Constants.js","Store/BoardStore.js","helpers/index.js","Actions/Actions.js","components/Filter/Filter.js","components/Search/Search.js","components/FlightDate/FlightDate.js","components/FlightStations/FlightStations.js","components/FlightNumber/FlightNumber.js","components/FlightTerminal/FlightTerminal.js","components/FlightDescribe/FlightDescribe.js","components/FlightRow/FlightRow.js","components/PlaneSchedule/PlaneSchedule.js","pages/AirportBoard/AirportBoard.js","components/HeaderNav/HeaderNav.js","components/Copyright/Copyright.js","pages/Main/Main.js","index.js"],"names":["Dispatcher","Constants","BY_ARRIVE","BY_DEPART","BY_DELAY","SEARCH_BY_NUMBER_FLIGHT","LOAD_FLIGHT","LOAD_STATION","LOAD_CARRIER","REMOVE_FLIGHT","REMOVE_STATION","REMOVE_CARRIER","LOAD_BOARD","FILTER_BY_DELAY","Store","this","filter","search","flights","stations","carriers","threads","store","BoardStore","Object","assign","EventEmitter","prototype","getStore","initialState","objectSpread","addChangeListener","callback","event","arguments","length","undefined","on","emitChange","emit","removeChangeListener","removeListener","register","action","type","threadNumber","isNotExistInArray","arr","item","key","some","el","getThread","segment","thread","uid","title","number","short_title","code_carrier","carrier","code","transport_type","vehicle","getCarrier","getStationFrom","stationFrom","from","getStationTo","stationTo","to","getFligth","fligth","arrival","arrival_terminal","departure","v4","duration","start_date","getElementByProperty","arrProperty","obj","objProperty","find","Actions","loadBoardDataFromTo","segments","fromto","forEach","toConsumableArray","concat","dispatch","loadBoardDataToFrom","tofrom","filterByType","searchByNumber","arrivalBtn","buttonFilter","cn","Filter-Btn","Filter-Btn_active","Filter","_ref","onFilterChange","react_default","a","createElement","className","onClick","defaultProps","Search","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onInputChange","_ref$target","target","name","value","setState","defineProperty","onChange","state","onSearchByBumber","onResetSearchValue","placeholder","React","Component","FlightDate","time","date","substr","FlightStations","FlightNumber","FlightTerminal","terminal","FlightDescribe","startDate","describe","arrivalDate","Date","departureDate","FlightRow","components_FlightDate_FlightDate","components_FlightStations_FlightStations","components_FlightNumber_FlightNumber","components_FlightTerminal_FlightTerminal","components_FlightDescribe_FlightDescribe","PlaneSchedule","searchStr","searchThreadNumber","trim","elem","substrInLowerCase","toLowerCase","indexOf","findInElemSubstr","filterFlight","flight","map","components_FlightRow_FlightRow","AirportBoard","updateState","searchText","_this$state","components_Filter_Filter","components_Search_Search","components_PlaneSchedule_PlaneSchedule","HeaderNav","Copyright","dangerouslySetInnerHTML","__html","href","Header","components_HeaderNav_HeaderNav","Container","pages_AirportBoard_AirportBoard","Footer","components_Copyright_Copyright","Main","Main_Header","Main_Container","Main_Footer","ReactDOM","render","pages_Main_Main","document","getElementById"],"mappings":"i89ZAEeA,EAAA,UAAIA,YCaJC,EAfG,CACdC,UAAW,YACXC,UAAW,YACXC,SAAU,WACVC,wBAAyB,0BACzBC,YAAa,cACbC,aAAc,eACdC,aAAc,eACdC,cAAe,gBACfC,eAAgB,iBAChBC,eAAgB,iBAChBC,WAAY,aACZC,gBAAiB,mBCPrB,SAASC,IACLC,KAAKC,OAASf,EAAUC,UACxBa,KAAKE,OAAS,GACdF,KAAKG,QAAU,GACfH,KAAKI,SAAW,GAChBJ,KAAKK,SAAW,GAChBL,KAAKM,QAAU,GAGnB,IAAIC,EAAQ,GAGNC,EAAaC,OAAOC,OAAO,GAAIC,eAAaC,UAAW,CACzDC,SADyD,WAErD,OAAON,GAGXO,aALyD,WAOrD,OADAP,EAAKE,OAAAM,EAAA,EAAAN,CAAA,GAAQ,IAAIV,IAIrBiB,kBAVyD,SAUvCC,GAAuC,IAA7BC,EAA6BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArB,oBAChCnB,KAAKsB,GAAGJ,EAAOD,IAGnBM,WAdyD,WAcjB,IAA7BL,EAA6BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArB,oBACfnB,KAAKwB,KAAKN,IAGdO,qBAlByD,SAkBpCR,GAAuC,IAA7BC,EAA6BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArB,oBACnCnB,KAAK0B,eAAeR,EAAOD,MAMnChC,EAAW0C,SAAS,SAACC,GACjB,OAAQA,EAAOC,MACf,KAAK3C,EAAUW,WACXU,EAAKE,OAAAM,EAAA,EAAAN,CAAA,GACEF,EADF,CAEDJ,QAASyB,EAAOzB,QAChBC,SAAUwB,EAAOxB,SACjBC,SAAUuB,EAAOvB,SACjBC,QAASsB,EAAOtB,QAChBL,OAAQ2B,EAAO3B,SAEnBO,EAAWe,aACX,MAEJ,KAAKrC,EAAUY,gBACXS,EAAKE,OAAAM,EAAA,EAAAN,CAAA,GACEF,EADF,CAEDN,OAAQ2B,EAAO3B,SAEnBO,EAAWe,aACX,MAEJ,KAAKrC,EAAUI,wBACXiB,EAAKE,OAAAM,EAAA,EAAAN,CAAA,GACEF,EADF,CAEDL,OAAQ0B,EAAOE,eAEnBtB,EAAWe,gBAOJf,uCCnEFuB,EAAoB,SAACC,EAAKC,EAAMC,GACzC,OAAIF,EAAIZ,OAAS,GACLY,EAAIG,KAAK,SAAAC,GAAE,OAAIA,EAAGF,KAASD,EAAKC,KAEtB,IAAfF,EAAIZ,QAQFiB,EAAY,SAACC,GACtB,IAAMC,EAASD,EAAQC,QAAU,GACjC,MAAO,CACHC,IAAKD,EAAOC,IACZC,MAAOF,EAAOE,MACdC,OAAQH,EAAOG,OACfC,YAAaJ,EAAOI,YACpBC,aAAcL,EAAOM,QAAQC,KAC7BC,eAAgBR,EAAOQ,eACvBC,QAAST,EAAOS,UASXC,EAAa,SAACX,GACvB,IAAMO,EAAUP,EAAQC,OAAOM,SAAW,GAC1C,MAAO,CACHJ,MAAOI,EAAQJ,MACfK,KAAMD,EAAQC,OASTI,EAAiB,SAACZ,GAC3B,IAAMa,EAAcb,EAAQc,MAAQ,GACpC,MAAO,CACHX,MAAOU,EAAYV,MACnBK,KAAMK,EAAYL,OASbO,EAAe,SAACf,GACzB,IAAMgB,EAAYhB,EAAQiB,IAAM,GAChC,MAAO,CACHd,MAAOa,EAAUb,MACjBK,KAAMQ,EAAUR,OASXU,EAAY,SAAClB,GACtB,IAAMmB,EAASnB,GAAW,GAC1B,MAAO,CACHoB,QAASD,EAAOC,QAChBC,iBAAkBF,EAAOE,iBACzBC,UAAWH,EAAOG,UAClBR,KAAMK,EAAOL,KAAKN,KAClBP,OAAQkB,EAAOlB,OAAOC,IACtBA,IAAKqB,eACLN,GAAIE,EAAOF,GAAGT,KACdgB,SAAUL,EAAOK,SACjBC,WAAYN,EAAOM,aAYdC,EAAuB,SAAChC,EAAKiC,EAAaC,EAAKC,GAAxB,OAAwCnC,EAAIoC,KAAK,SAAAhC,GAAE,OAAIA,EAAG6B,KAAiBC,EAAIC,MCRpGE,EAhFC,CACZC,oBADY,SACQrE,GAAQ,IAChBsE,EAAaC,EAAbD,SACJpE,EAAU,GACVC,EAAW,GACXC,EAAW,GACXC,EAAU,GACdiE,EAASE,QAAQ,SAACnC,GACdhC,EAAOG,OAAAiE,EAAA,EAAAjE,CAAOH,GAAPqE,OAAA,CAAgBtC,EAAUC,KAC7BP,EAAkB1B,EAAUiC,EAAQC,OAAOM,QAAS,UACpDxC,EAAQI,OAAAiE,EAAA,EAAAjE,CAAOJ,GAAPsE,OAAA,CAAiB1B,EAAWX,MAEpCP,EAAkB3B,EAAUkC,EAAQc,KAAM,UAC1ChD,EAAQK,OAAAiE,EAAA,EAAAjE,CAAOL,GAAPuE,OAAA,CAAiBzB,EAAeZ,MAExCP,EAAkB3B,EAAUkC,EAAQiB,GAAI,UACxCnD,EAAQK,OAAAiE,EAAA,EAAAjE,CAAOL,GAAPuE,OAAA,CAAiBtB,EAAaf,MAE1CnC,EAAOM,OAAAiE,EAAA,EAAAjE,CAAON,GAAPwE,OAAA,CAAgBnB,EAAUlB,OAErCrD,EAAW2F,SAAS,CAChB/C,KAAM3C,EAAUW,WAChBM,UACAC,WACAC,WACAC,UACAL,YAIR4E,oBA9BY,SA8BQ5E,GAAQ,IAChBsE,EAAaO,EAAbP,SACJpE,EAAU,GACVC,EAAW,GACXC,EAAW,GACXC,EAAU,GACdiE,EAASE,QAAQ,SAACnC,GACdhC,EAAOG,OAAAiE,EAAA,EAAAjE,CAAOH,GAAPqE,OAAA,CAAgBtC,EAAUC,KAC7BP,EAAkB1B,EAAUiC,EAAQC,OAAOM,QAAS,UACpDxC,EAAQI,OAAAiE,EAAA,EAAAjE,CAAOJ,GAAPsE,OAAA,CAAiB1B,EAAWX,MAEpCP,EAAkB3B,EAAUkC,EAAQc,KAAM,UAC1ChD,EAAQK,OAAAiE,EAAA,EAAAjE,CAAOL,GAAPuE,OAAA,CAAiBzB,EAAeZ,MAExCP,EAAkB3B,EAAUkC,EAAQiB,GAAI,UACxCnD,EAAQK,OAAAiE,EAAA,EAAAjE,CAAOL,GAAPuE,OAAA,CAAiBtB,EAAaf,MAE1CnC,EAAOM,OAAAiE,EAAA,EAAAjE,CAAON,GAAPwE,OAAA,CAAgBnB,EAAUlB,OAErCrD,EAAW2F,SAAS,CAChB/C,KAAM3C,EAAUW,WAChBM,UACAC,WACAC,WACAC,UACAL,YAIR8E,aA3DY,SA2DC9E,GACT,OAAQA,GACR,KAAKf,EAAUC,UACXa,KAAK6E,oBAAoB5E,GACzB,MACJ,KAAKf,EAAUE,UACXY,KAAKsE,oBAAoBrE,KAOjC+E,eAxEY,SAwEGlD,GACX7C,EAAW2F,SAAS,CAChB/C,KAAM3C,EAAUI,wBAChBwC,oCClFNmD,SAAa,SAAChF,EAAQiF,GAAT,OAA0BC,IAAG,CAC5CC,cAAc,EACdC,oBAAqBH,IAAiBjF,MAGpCqF,EAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,eAAgBvF,EAAnBsF,EAAmBtF,OAAnB,OACXwF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UAAQE,QAASL,EAAetG,EAAUE,WAAYyC,KAAK,SAAS+D,UAAWX,EAAWhF,EAAQf,EAAUE,YAA5G,kCAGAqG,EAAAC,EAAAC,cAAA,UAAQE,QAASL,EAAetG,EAAUC,WAAY0C,KAAK,SAAS+D,UAAWX,EAAWhF,EAAQf,EAAUC,YAA5G,0CAWRmG,EAAOQ,aAAe,CAClB7F,OAAQf,EAAUC,WAGPmG,eC2BAS,qBArDX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAxF,OAAAyF,EAAA,EAAAzF,CAAAT,KAAA+F,IACfE,EAAAxF,OAAA0F,EAAA,EAAA1F,CAAAT,KAAAS,OAAA2F,EAAA,EAAA3F,CAAAsF,GAAAM,KAAArG,KAAMgG,KAMVM,cAAgB,SAAAf,GAAiC,IAAAgB,EAAAhB,EAA9BiB,OAAUC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,MAC/BT,EAAKU,SAALlG,OAAAmG,EAAA,EAAAnG,CAAA,GAAiBgG,EAAOC,KARTT,EAWnBY,SAAW,WAAM,IACL3G,EAAW+F,EAAKa,MAAhB5G,QAER6G,EAD6Bd,EAAKD,MAA1Be,kBACS7G,IAdF+F,EAiBnBe,mBAAqB,YAEjBD,EAD6Bd,EAAKD,MAA1Be,kBACS,IACjBd,EAAKU,SAAS,CAAEzG,OAAQ,MAlBxB+F,EAAKa,MAAQ,CACT5G,OAAQ,IAHG+F,wEAuBV,IACG/F,EAAWF,KAAK8G,MAAhB5G,OACR,OACIuF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,SACI9D,KAAK,OACL4E,KAAK,SACLC,MAAOxG,EACP2G,SAAU7G,KAAKsG,cACfV,UAAU,cACVqB,YAAY,6GAEhBxB,EAAAC,EAAAC,cAAA,UACIE,QAAS7F,KAAK6G,SACdjB,UAAU,oCACV/D,KAAK,UAHT,kCAOA4D,EAAAC,EAAAC,cAAA,UAAQE,QAAS7F,KAAKgH,mBAAoBpB,UAAU,aAAa/D,KAAK,UAAtE,4DA3CKqF,IAAMC,YCArBC,qBAAa,SAAA7B,GAAA,IAAG8B,EAAH9B,EAAG8B,KAAMC,EAAT/B,EAAS+B,KAAT,OACf7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACVyB,EAAKE,OAAO,EAAG,GACf,IACAD,KAQTF,EAAWtB,aAAe,CACtBwB,KAAM,GACND,KAAM,IAGKD,QCjBTI,SAAiB,SAAAjC,GAAA,IAAGpC,EAAHoC,EAAGpC,YAAaG,EAAhBiC,EAAgBjC,UAAhB,OACnBmC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,GAAAjB,OACQxB,EAAYV,MADpB,iCAAAkC,OAGMrB,EAAUb,UAQpB+E,EAAe1B,aAAe,CAC1B3C,YAAa,CAAEL,KAAM,GAAIL,MAAO,IAChCa,UAAW,CAAER,KAAM,GAAIL,MAAO,KAGnB+E,QCjBTC,SAAe,SAAAlC,GAAA,IAAGhD,EAAHgD,EAAGhD,OAAH,OAAgBkD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBrD,KAMpEkF,EAAa3B,aAAe,CACxBvD,OAAQ,IAGGkF,QCVTC,SAAiB,SAAAnC,GAAA,IAAGoC,EAAHpC,EAAGoC,SAAH,OAAkBlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB+B,KAK1ED,EAAe5B,aAAe,CAC1B6B,SAAU,IAGCD,QCTTE,SAAiB,SAAArC,GAEjB,IADF7B,EACE6B,EADF7B,QAASE,EACP2B,EADO3B,UAAWE,EAClByB,EADkBzB,SAAU+D,EAC5BtC,EAD4BsC,UAE1BC,EAAW,GACXC,EAAW,GAAApD,OAAMkD,EAAN,KAAAlD,OAAmBjB,GAClCqE,GAAe,IAAIC,KAAKD,GACxB,IAAIE,EAAa,GAAAtD,OAAMkD,EAAN,KAAAlD,OAAmBf,GAOpC,OANAqE,GAAiB,IAAID,KAAKC,IACNF,EAAcjE,EAC9BgE,EAAW,6EACH,IAAIE,KAASD,IACrBD,EAAW,iEAERrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBkC,KAU5CF,EAAe9B,aAAe,CAC1BpC,QAAS,GACTE,UAAW,GACXE,SAAU,EACV+D,UAAW,IAGAD,QCxBTM,EAAY,SAAA3C,GAAoC,IAAjCpF,EAAiCoF,EAAjCpF,QAASG,EAAwBiF,EAAxBjF,QAASF,EAAemF,EAAfnF,SAC7B+C,EAAc/C,EAASgB,OACvB4C,EAAqB5D,EAAU,OAAQD,EAAS,QAChD,GACAmD,EAAYlD,EAASgB,OAAS4C,EAAqB5D,EAAU,OAAQD,EAAS,MAAQ,GACtFoC,EAASjC,EAAU0D,EAAqB1D,EAAS,MAAOH,EAAS,UAAY,GACnF,OACIsF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACVH,EAAAC,EAAAC,cAACwC,EAAD,CAAYd,KAAMlH,EAAQuD,QAAS4D,KAAMnH,EAAQ4D,aACjD0B,EAAAC,EAAAC,cAACyC,EAAD,CAAgBjF,YAAaA,EAAaG,UAAWA,IACrDmC,EAAAC,EAAAC,cAAC0C,EAAD,CAAc9F,OAAQA,EAAOG,SAC7B+C,EAAAC,EAAAC,cAAC2C,EAAD,CAAgBX,SAAUxH,EAAQwD,mBAClC8B,EAAAC,EAAAC,cAAC4C,EAAD,CACIV,UAAW1H,EAAQ4D,WACnBL,QAASvD,EAAQuD,QACjBE,UAAWzD,EAAQyD,UACnBE,SAAU3D,EAAQ2D,aA+BlCoE,EAAUpC,aAAe,CACrB3F,QAAS,CACLuD,QAAS,GACTC,iBAAkB,GAClBC,UAAW,GACXR,KAAM,GACNb,OAAQ,GACRC,IAAK,GACLe,GAAI,GACJO,SAAU,GAEdxD,QAAS,GACTF,SAAU,IAGC8H,QChDTM,SAAgB,SAAAjD,GAEhB,IADFpF,EACEoF,EADFpF,QAASG,EACPiF,EADOjF,QAASmI,EAChBlD,EADgBkD,UAAWrI,EAC3BmF,EAD2BnF,SAKvBsI,EAAqBD,EAAUE,OAAOvH,OACtCd,EAAQL,OAAO,SAAAmC,GAAE,OArBF,SAACwG,EAAMrB,GAC5B,IAAMsB,EAAoBtB,EAAOoB,OAAOG,cAExC,OADwBF,EAAKD,OAAOG,cACbC,QAAQF,GAkBJG,CAAiB5G,EAAGM,OAAQ+F,IAAc,IAC/D,GAIAQ,EAAeP,EAAmBtH,OAClCjB,EAAQF,OAAO,SAAAiJ,GAAM,OAfTN,EAe0BM,EAAQR,EAfRtE,KAAK,SAAAhC,GAAE,OAAIA,EAAGI,MAAQoG,EAAKrG,SAAtD,IAACqG,IAgBZzI,EACN,OACIsF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACTqD,EAAaE,IAAI,SAAAD,GAAM,OACpBzD,EAAAC,EAAAC,cAACyD,EAAD,CACIlH,IAAKgH,EAAO1G,IACZrC,QAAS+I,EACT5I,QAASA,EACTF,SAAUA,SAmC9BoI,EAAc1C,aAAe,CACzB3F,QAAS,GACTG,QAAS,GACTmI,UAAW,GACXrI,SAAU,IAGCoI,QC5BAa,cAlDX,SAAAA,EAAYrD,GAAO,IAAAC,EAAA,OAAAxF,OAAAyF,EAAA,EAAAzF,CAAAT,KAAAqJ,IACfpD,EAAAxF,OAAA0F,EAAA,EAAA1F,CAAAT,KAAAS,OAAA2F,EAAA,EAAA3F,CAAA4I,GAAAhD,KAAArG,KAAMgG,KAeVsD,YAAc,WACVrD,EAAKU,SAALlG,OAAAM,EAAA,EAAAN,CAAA,GAAmBD,EAAWK,cAjBfoF,EAoBnBc,iBAAmB,SAACwC,GAChBlF,EAAQW,eAAeuE,IArBRtD,EAwBnBT,eAAiB,SAAAvF,GAAM,OAAI,WACvBoE,EAAQU,aAAa9E,KAvBrBgG,EAAKa,MAALrG,OAAAM,EAAA,EAAAN,CAAA,GACOD,EAAWM,gBAHHmF,mFAQfzF,EAAWQ,kBAAkBhB,KAAKsJ,aAClCjF,EAAQC,oBAAoBpF,EAAUC,0DAItCqB,EAAWiB,qBAAqBzB,KAAKsJ,8CAehC,IAAAE,EAGDxJ,KAAK8G,MADL3G,EAFCqJ,EAEDrJ,QAASC,EAFRoJ,EAEQpJ,SAAUE,EAFlBkJ,EAEkBlJ,QAASJ,EAF3BsJ,EAE2BtJ,OAAQD,EAFnCuJ,EAEmCvJ,OAExC,OACIwF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,kCACAH,EAAAC,EAAAC,cAAC8D,EAAD,CAAQjE,eAAgBxF,KAAKwF,eAAgBvF,OAAQA,IACrDwF,EAAAC,EAAAC,cAAC+D,EAAD,CAAQ3C,iBAAkB/G,KAAK+G,mBAC/BtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACgE,EAAD,CACIxJ,QAASA,EACTG,QAASA,EACTF,SAAUA,EACVqI,UAAWvI,aA3CRiH,aCcZyC,gBApBG,kBACdnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kCACVH,EAAAC,EAAAC,cAAA,UAAQ9D,KAAK,SAAS+D,UAAU,QAAhC,wEAIJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVH,EAAAC,EAAAC,cAAA,UAAQ9D,KAAK,SAAS+D,UAAU,QAAhC,yCAIJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVH,EAAAC,EAAAC,cAAA,UAAQ9D,KAAK,SAAS+D,UAAU,QAAhC,6FCEGiE,UAbG,kBACdpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKmE,wBAJK,CAAEC,OADL,qKAMPtE,EAAAC,EAAAC,cAAA,KAAGqE,KAAK,yBAAyBpE,UAAU,QAA3C,2BAKJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,6QCRFqE,GAAS,kBACXxE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAACuE,GAAD,SAKNC,GAAY,kBACd1E,EAAAC,EAAAC,cAAA,WAASC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAACyE,EAAD,SAKNC,GAAS,kBACX5E,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAC2E,GAAD,SAaGC,GARF,kBACT9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAC6E,GAAD,MACA/E,EAAAC,EAAAC,cAAC8E,GAAD,MACAhF,EAAAC,EAAAC,cAAC+E,GAAD,cC7BRC,IAASC,OAAOnF,EAAAC,EAAAC,cAACkF,GAAD,MAAUC,SAASC,eAAe","file":"static/js/main.5b10a545.chunk.js","sourcesContent":["import { Dispatcher } from 'flux';\n\nexport default new Dispatcher();\n","const Constants = {\n    BY_ARRIVE: 'BY_ARRIVE',\n    BY_DEPART: 'BY_DEPART',\n    BY_DELAY: 'BY_DELAY',\n    SEARCH_BY_NUMBER_FLIGHT: 'SEARCH_BY_NUMBER_FLIGHT',\n    LOAD_FLIGHT: 'LOAD_FLIGHT',\n    LOAD_STATION: 'LOAD_STATION',\n    LOAD_CARRIER: 'LOAD_CARRIER',\n    REMOVE_FLIGHT: 'REMOVE_FLIGHT',\n    REMOVE_STATION: 'REMOVE_STATION',\n    REMOVE_CARRIER: 'REMOVE_CARRIER',\n    LOAD_BOARD: 'LOAD_BOARD',\n    FILTER_BY_DELAY: 'FILTER_BY_DELAY',\n};\n\nexport default Constants;\n","import { EventEmitter } from 'events';\nimport Dispatcher from '../Dispatcher';\nimport Constants from '../Constants';\n\n// Внутренний объект для хранения состояния приложения\nfunction Store() {\n    this.filter = Constants.BY_ARRIVE;\n    this.search = '';\n    this.flights = [];\n    this.stations = [];\n    this.carriers = [];\n    this.threads = [];\n}\n\nlet store = {};\n\n// Добавить возможности Event Emitter из Node\nconst BoardStore = Object.assign({}, EventEmitter.prototype, {\n    getStore() {\n        return store;\n    },\n\n    initialState() {\n        store = { ...new Store() };\n        return store;\n    },\n\n    addChangeListener(callback, event = 'BOARDSTORE_CHANGE') {\n        this.on(event, callback);\n    },\n\n    emitChange(event = 'BOARDSTORE_CHANGE') {\n        this.emit(event);\n    },\n\n    removeChangeListener(callback, event = 'BOARDSTORE_CHANGE') {\n        this.removeListener(event, callback);\n    },\n\n});\n\n// Зарегистрировать обработчик в Диспетчере\nDispatcher.register((action) => {\n    switch (action.type) {\n    case Constants.LOAD_BOARD: {\n        store = {\n            ...store,\n            flights: action.flights,\n            stations: action.stations,\n            carriers: action.carriers,\n            threads: action.threads,\n            filter: action.filter,\n        };\n        BoardStore.emitChange();\n        break;\n    }\n    case Constants.FILTER_BY_DELAY: {\n        store = {\n            ...store,\n            filter: action.filter,\n        };\n        BoardStore.emitChange();\n        break;\n    }\n    case Constants.SEARCH_BY_NUMBER_FLIGHT: {\n        store = {\n            ...store,\n            search: action.threadNumber,\n        };\n        BoardStore.emitChange();\n        break;\n    }\n    default:\n    }\n});\n\nexport default BoardStore;\n","import { v4 } from 'uuid';\n\n/**\n * Проверяет на существование объекта с данным свойством в массиве\n * @param {array} arr\n * @param {object} item\n * @param {some} key\n * @return {boolean}\n */\nexport const isNotExistInArray = (arr, item, key) => {\n    if (arr.length > 0) {\n        return !arr.some(el => el[key] === item[key]);\n    }\n    return arr.length === 0;\n};\n\n/**\n * Возвращает новый объект c ниткой рейса\n * @param {object} segment\n * @return {object}\n */\nexport const getThread = (segment) => {\n    const thread = segment.thread || {};\n    return {\n        uid: thread.uid,\n        title: thread.title,\n        number: thread.number,\n        short_title: thread.short_title,\n        code_carrier: thread.carrier.code,\n        transport_type: thread.transport_type,\n        vehicle: thread.vehicle,\n    };\n};\n\n/**\n *  Возвращает новый объект с перевозчиками\n * @param {object} segment\n * @return {object}\n */\nexport const getCarrier = (segment) => {\n    const carrier = segment.thread.carrier || {};\n    return {\n        title: carrier.title,\n        code: carrier.code,\n    };\n};\n\n/**\n * Возвращает новыйобъект со станциями отправления\n * @param {object} segment\n * @return {object}\n */\nexport const getStationFrom = (segment) => {\n    const stationFrom = segment.from || {};\n    return {\n        title: stationFrom.title,\n        code: stationFrom.code,\n    };\n};\n\n/**\n * Возвращает новыйобъект со станциями назначения\n * @param {object} segment\n * @return {object}\n */\nexport const getStationTo = (segment) => {\n    const stationTo = segment.to || {};\n    return {\n        title: stationTo.title,\n        code: stationTo.code,\n    };\n};\n\n/**\n * Возвращает новый объект с информацией по рейсу\n * @param {object} segment\n * @return {object}\n */\nexport const getFligth = (segment) => {\n    const fligth = segment || {};\n    return {\n        arrival: fligth.arrival,\n        arrival_terminal: fligth.arrival_terminal,\n        departure: fligth.departure,\n        from: fligth.from.code,\n        thread: fligth.thread.uid,\n        uid: v4(),\n        to: fligth.to.code,\n        duration: fligth.duration,\n        start_date: fligth.start_date,\n    };\n};\n\n/**\n * Возвращает первый найденный элемент в массиве с указанным свойством\n * @param {*} arr\n * @param {*} arrProperty\n * @param {*} obj\n * @param {*} objProperty\n */\n// eslint-disable-next-line max-len\nexport const getElementByProperty = (arr, arrProperty, obj, objProperty) => arr.find(el => el[arrProperty] === obj[objProperty]);\n","import Constants from '../Constants';\nimport Dispatcher from '../Dispatcher';\nimport fromto from '../data/fromto.json';\nimport tofrom from '../data/tofrom.json';\nimport {\n    getThread,\n    getCarrier,\n    isNotExistInArray,\n    getStationFrom,\n    getStationTo,\n    getFligth,\n} from '../helpers/index';\n\nconst Actions = {\n    loadBoardDataFromTo(filter) {\n        const { segments } = fromto;\n        let flights = [];\n        let stations = [];\n        let carriers = [];\n        let threads = [];\n        segments.forEach((segment) => {\n            threads = [...threads, getThread(segment)];\n            if (isNotExistInArray(carriers, segment.thread.carrier, 'code')) {\n                carriers = [...carriers, getCarrier(segment)];\n            }\n            if (isNotExistInArray(stations, segment.from, 'code')) {\n                stations = [...stations, getStationFrom(segment)];\n            }\n            if (isNotExistInArray(stations, segment.to, 'code')) {\n                stations = [...stations, getStationTo(segment)];\n            }\n            flights = [...flights, getFligth(segment)];\n        });\n        Dispatcher.dispatch({\n            type: Constants.LOAD_BOARD,\n            flights,\n            stations,\n            carriers,\n            threads,\n            filter,\n        });\n    },\n\n    loadBoardDataToFrom(filter) {\n        const { segments } = tofrom;\n        let flights = [];\n        let stations = [];\n        let carriers = [];\n        let threads = [];\n        segments.forEach((segment) => {\n            threads = [...threads, getThread(segment)];\n            if (isNotExistInArray(carriers, segment.thread.carrier, 'code')) {\n                carriers = [...carriers, getCarrier(segment)];\n            }\n            if (isNotExistInArray(stations, segment.from, 'code')) {\n                stations = [...stations, getStationFrom(segment)];\n            }\n            if (isNotExistInArray(stations, segment.to, 'code')) {\n                stations = [...stations, getStationTo(segment)];\n            }\n            flights = [...flights, getFligth(segment)];\n        });\n        Dispatcher.dispatch({\n            type: Constants.LOAD_BOARD,\n            flights,\n            stations,\n            carriers,\n            threads,\n            filter,\n        });\n    },\n\n    filterByType(filter) {\n        switch (filter) {\n        case Constants.BY_ARRIVE:\n            this.loadBoardDataToFrom(filter);\n            break;\n        case Constants.BY_DEPART:\n            this.loadBoardDataFromTo(filter);\n            break;\n        default:\n            break;\n        }\n    },\n\n    searchByNumber(threadNumber) {\n        Dispatcher.dispatch({\n            type: Constants.SEARCH_BY_NUMBER_FLIGHT,\n            threadNumber,\n        });\n    },\n};\n\nexport default Actions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport './Filter.scss';\nimport Constants from '../../Constants';\n\nconst arrivalBtn = (filter, buttonFilter) => cn({\n    'Filter-Btn': true,\n    'Filter-Btn_active': buttonFilter === filter,\n});\n\nconst Filter = ({ onFilterChange, filter }) => (\n    <div className=\"Filter\">\n        <button onClick={onFilterChange(Constants.BY_DEPART)} type=\"submit\" className={arrivalBtn(filter, Constants.BY_DEPART)}>\n            Вылет\n        </button>\n        <button onClick={onFilterChange(Constants.BY_ARRIVE)} type=\"submit\" className={arrivalBtn(filter, Constants.BY_ARRIVE)}>\n            Прилет\n        </button>\n    </div>\n);\n\nFilter.propTypes = {\n    onFilterChange: PropTypes.func.isRequired,\n    filter: PropTypes.string,\n};\n\nFilter.defaultProps = {\n    filter: Constants.BY_ARRIVE,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Search.scss';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search: '',\n        };\n    }\n\n    onInputChange = ({ target: { name, value } }) => {\n        this.setState({ [name]: value });\n    };\n\n    onChange = () => {\n        const { search } = this.state;\n        const { onSearchByBumber } = this.props;\n        onSearchByBumber(search);\n    };\n\n    onResetSearchValue = () => {\n        const { onSearchByBumber } = this.props;\n        onSearchByBumber('');\n        this.setState({ search: '' });\n    };\n\n    render() {\n        const { search } = this.state;\n        return (\n            <div className=\"Search\">\n                <input\n                    type=\"text\"\n                    name=\"search\"\n                    value={search}\n                    onChange={this.onInputChange}\n                    className=\"Search-Text\"\n                    placeholder=\"Введите номер рейса\"\n                />\n                <button\n                    onClick={this.onChange}\n                    className=\"Search-Btn search-Btn_marginRight\"\n                    type=\"submit\"\n                >\n                    Поиск\n                </button>\n                <button onClick={this.onResetSearchValue} className=\"Search-Btn\" type=\"submit\">\n                    Очистить\n                </button>\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    onSearchByBumber: PropTypes.func.isRequired,\n};\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FlightDate.scss';\n\nconst FlightDate = ({ time, date }) => (\n    <div className=\"FlightDate\">\n        {time.substr(0, 5)}\n        {' '}\n        {date}\n    </div>\n);\nFlightDate.propTypes = {\n    date: PropTypes.string,\n    time: PropTypes.string,\n};\n\nFlightDate.defaultProps = {\n    date: '',\n    time: '',\n};\n\nexport default FlightDate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FlightStations.scss';\n\nconst FlightStations = ({ stationFrom, stationTo }) => (\n    <div className=\"FlightStations\">\n        {`${stationFrom.title}\n                -\n        ${stationTo.title}`}\n    </div>\n);\nFlightStations.propTypes = {\n    stationFrom: PropTypes.objectOf(PropTypes.string),\n    stationTo: PropTypes.objectOf(PropTypes.string),\n};\n\nFlightStations.defaultProps = {\n    stationFrom: { code: '', title: '' },\n    stationTo: { code: '', title: '' },\n};\n\nexport default FlightStations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FlightNumber.scss';\n\nconst FlightNumber = ({ thread }) => <div className=\"FlightNumber\">{thread}</div>;\n\nFlightNumber.propTypes = {\n    thread: PropTypes.string,\n};\n\nFlightNumber.defaultProps = {\n    thread: '',\n};\n\nexport default FlightNumber;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FlightTerminal.scss';\n\nconst FlightTerminal = ({ terminal }) => <div className=\"FlightTerminal\">{terminal}</div>;\nFlightTerminal.propTypes = {\n    terminal: PropTypes.string,\n};\n\nFlightTerminal.defaultProps = {\n    terminal: '',\n};\n\nexport default FlightTerminal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FlightDescribe.scss';\n\nconst FlightDescribe = ({\n    arrival, departure, duration, startDate,\n}) => {\n    let describe = '';\n    let arrivalDate = `${startDate}T${arrival}`;\n    arrivalDate = +new Date(arrivalDate);\n    let departureDate = `${startDate}T${departure}`;\n    departureDate = +new Date(departureDate);\n    if (departureDate - arrivalDate > duration) {\n        describe = 'Рейс задержан';\n    } else if (+new Date() > arrivalDate) {\n        describe = 'Рейс прибыл';\n    }\n    return <div className=\"FlightDescribe\">{describe}</div>;\n};\n\nFlightDescribe.propTypes = {\n    arrival: PropTypes.string,\n    departure: PropTypes.string,\n    duration: PropTypes.number,\n    startDate: PropTypes.string,\n};\n\nFlightDescribe.defaultProps = {\n    arrival: '',\n    departure: '',\n    duration: 0,\n    startDate: '',\n};\n\nexport default FlightDescribe;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FlightRow.scss';\r\nimport { getElementByProperty } from '../../helpers/index';\r\nimport FlightDate from '../FlightDate/FlightDate';\r\nimport FlightStations from '../FlightStations/FlightStations';\r\nimport FlightNumber from '../FlightNumber/FlightNumber';\r\nimport FlightTerminal from '../FlightTerminal/FlightTerminal';\r\nimport FlightDescribe from '../FlightDescribe/FlightDescribe';\r\n\r\nconst FlightRow = ({ flights, threads, stations }) => {\r\n    const stationFrom = stations.length\r\n        ? getElementByProperty(stations, 'code', flights, 'from')\r\n        : [];\r\n    const stationTo = stations.length ? getElementByProperty(stations, 'code', flights, 'to') : [];\r\n    const thread = threads ? getElementByProperty(threads, 'uid', flights, 'thread') : [];\r\n    return (\r\n        <li className=\"FlightRow\">\r\n            <FlightDate time={flights.arrival} date={flights.start_date} />\r\n            <FlightStations stationFrom={stationFrom} stationTo={stationTo} />\r\n            <FlightNumber thread={thread.number} />\r\n            <FlightTerminal terminal={flights.arrival_terminal} />\r\n            <FlightDescribe\r\n                startDate={flights.start_date}\r\n                arrival={flights.arrival}\r\n                departure={flights.departure}\r\n                duration={flights.duration}\r\n            />\r\n        </li>\r\n    );\r\n};\r\n\r\nconst threadsObj = {\r\n    uid: PropTypes.string,\r\n    title: PropTypes.string,\r\n    number: PropTypes.string,\r\n    short_title: PropTypes.string,\r\n    codeCarrier: PropTypes.number,\r\n    transport_type: PropTypes.string,\r\n    vehicle: PropTypes.string,\r\n};\r\n\r\nFlightRow.propTypes = {\r\n    flights: PropTypes.shape({\r\n        arrival: PropTypes.string,\r\n        arrival_terminal: PropTypes.string,\r\n        departure: PropTypes.string,\r\n        from: PropTypes.string,\r\n        thread: PropTypes.string,\r\n        uid: PropTypes.string,\r\n        to: PropTypes.string,\r\n        duration: PropTypes.number,\r\n    }),\r\n    threads: PropTypes.arrayOf(PropTypes.shape(threadsObj)),\r\n    stations: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\r\n};\r\n\r\nFlightRow.defaultProps = {\r\n    flights: {\r\n        arrival: '',\r\n        arrival_terminal: '',\r\n        departure: '',\r\n        from: '',\r\n        thread: '',\r\n        uid: '',\r\n        to: '',\r\n        duration: 0,\r\n    },\r\n    threads: [],\r\n    stations: [],\r\n};\r\n\r\nexport default FlightRow;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FlightRow from '../FlightRow/FlightRow';\nimport './PlaneSchedule.scss';\n\n/** Поиск подстроки в слове\n * @param {string} elem\n * @param {string} substr\n * @returns {number}\n */\nconst findInElemSubstr = (elem, substr) => {\n    const substrInLowerCase = substr.trim().toLowerCase();\n    const elemInLowerCase = elem.trim().toLowerCase();\n    return elemInLowerCase.indexOf(substrInLowerCase);\n};\n\n/**\n * Поиск в массиве элемента по свойству\n * @param {object} elem\n * @param {Array} threads\n * @returns {array}\n */\nconst findObjInArr = (elem, threads) => threads.find(el => el.uid === elem.thread);\n\nconst PlaneSchedule = ({\n    flights, threads, searchStr, stations,\n}) => {\n    /**\n     * найти все нитки рейсов, в номерах которых содержится подстрока из поиска\n     */\n    const searchThreadNumber = searchStr.trim().length\n        ? threads.filter(el => findInElemSubstr(el.number, searchStr) >= 0)\n        : [];\n    /**\n     * отфильтровать массив рейсов по найденным ниткам\n     */\n    const filterFlight = searchThreadNumber.length\n        ? flights.filter(flight => findObjInArr(flight, searchThreadNumber))\n        : flights;\n    return (\n        <ul className=\"PlaneSchedule-Nav\">\n            {filterFlight.map(flight => (\n                <FlightRow\n                    key={flight.uid}\n                    flights={flight}\n                    threads={threads}\n                    stations={stations}\n                />\n            ))}\n        </ul>\n    );\n};\n\nconst threadsObj = {\n    uid: PropTypes.string,\n    title: PropTypes.string,\n    number: PropTypes.string,\n    short_title: PropTypes.string,\n    codeCarrier: PropTypes.number,\n    transport_type: PropTypes.string,\n    vehicle: PropTypes.string,\n};\n\nPlaneSchedule.propTypes = {\n    flights: PropTypes.arrayOf(\n        PropTypes.shape({\n            arrival: PropTypes.string,\n            arrival_terminal: PropTypes.string,\n            departure: PropTypes.string,\n            from: PropTypes.string,\n            thread: PropTypes.string,\n            uid: PropTypes.string,\n            to: PropTypes.string,\n            duration: PropTypes.number,\n        }),\n    ),\n    threads: PropTypes.arrayOf(PropTypes.shape(threadsObj)),\n    searchStr: PropTypes.string,\n    stations: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n};\n\nPlaneSchedule.defaultProps = {\n    flights: [],\n    threads: [],\n    searchStr: '',\n    stations: [],\n};\n\nexport default PlaneSchedule;\n","import React, { Component } from 'react';\nimport BoardStore from '../../Store/BoardStore';\nimport Actions from '../../Actions/Actions';\nimport Filter from '../../components/Filter/Filter';\nimport Search from '../../components/Search/Search';\nimport './AirportBoard.scss';\nimport PlaneSchedule from '../../components/PlaneSchedule/PlaneSchedule';\nimport Constants from '../../Constants';\n\nclass AirportBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...BoardStore.initialState(),\n        };\n    }\n\n    componentDidMount() {\n        BoardStore.addChangeListener(this.updateState);\n        Actions.loadBoardDataFromTo(Constants.BY_ARRIVE);\n    }\n\n    componentWillUnmount() {\n        BoardStore.removeChangeListener(this.updateState);\n    }\n\n    updateState = () => {\n        this.setState({ ...BoardStore.getStore() });\n    };\n\n    onSearchByBumber = (searchText) => {\n        Actions.searchByNumber(searchText);\n    };\n\n    onFilterChange = filter => () => {\n        Actions.filterByType(filter);\n    };\n\n    render() {\n        const {\n            flights, stations, threads, search, filter,\n        } = this.state;\n        return (\n            <div className=\"AirportBoard\">\n                <h3 className=\"AirportBoard-Title\">Табло</h3>\n                <Filter onFilterChange={this.onFilterChange} filter={filter} />\n                <Search onSearchByBumber={this.onSearchByBumber} />\n                <div className=\"Flights\">\n                    <PlaneSchedule\n                        flights={flights}\n                        threads={threads}\n                        stations={stations}\n                        searchStr={search}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AirportBoard;\n","import React from 'react';\r\nimport './HeaderNav.scss';\r\n\r\nconst HeaderNav = () => (\r\n    <nav className=\"HeaderNav\">\r\n        <li className=\"Header-Item Header-Item_active\">\r\n            <button type=\"submit\" className=\"link\">\r\n                Табло рейсов\r\n            </button>\r\n        </li>\r\n        <li className=\"HeaderNav-Item\">\r\n            <button type=\"submit\" className=\"link\">\r\n                Услуги\r\n            </button>\r\n        </li>\r\n        <li className=\"HeaderNav-Item\">\r\n            <button type=\"submit\" className=\"link\">\r\n                Схема аэропорта\r\n            </button>\r\n        </li>\r\n    </nav>\r\n);\r\n\r\nexport default HeaderNav;\r\n","import React from 'react';\nimport './Copyright.scss';\n\nconst iframeIcon = '<iframe frameborder=\"0\" style=\"overflow: hidden; border: 0; width: 240px; height: 130px;\" src=\"//yandex.st/rasp/media/apicc/copyright_vert_mono.html\"></iframe>';\nconst iframe = () => ({ __html: iframeIcon });\nconst Copyright = () => (\n    <div className=\"Copyright\">\n        <div className=\"Copyright-Banner\">\n            <div dangerouslySetInnerHTML={iframe()} />\n            <a href=\"http://rasp.yandex.ru/\" className=\"Link\">\n                http://rasp.yandex.ru/\n            </a>\n        </div>\n\n        <div className=\"Copyright-Text\">Данные предоставлены сервисом Яндекс.Расписания</div>\n    </div>\n);\n\nexport default Copyright;\n","import React from 'react';\nimport AirportBoard from '../AirportBoard/AirportBoard';\nimport './Main.scss';\nimport HeaderNav from '../../components/HeaderNav/HeaderNav';\nimport Copyright from '../../components/Copyright/Copyright';\n\nconst Header = () => (\n    <header className=\"Header\">\n        <div className=\"Container Header-Container\">\n            <HeaderNav />\n        </div>\n    </header>\n);\n\nconst Container = () => (\n    <section className=\"Content Main-Content\">\n        <div className=\"Container Content-Container\">\n            <AirportBoard />\n        </div>\n    </section>\n);\n\nconst Footer = () => (\n    <footer className=\"Footer\">\n        <div className=\"Container Footer-Container\">\n            <Copyright />\n        </div>\n    </footer>\n);\n\nconst Main = () => (\n    <div className=\"Wrapper\">\n        <Header />\n        <Container />\n        <Footer />\n    </div>\n);\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './pages/Main/Main';\nimport './index.scss';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}